shiny::runApp()
packrat::install_github('trestletech/shinyAce')
shiny::runApp()
install.packages("phreeq")
install.packages("phreeqc")
library(phreeqc)
shiny::runApp()
shiny::runApp()
shiny::runApp()
phrLoadDatabaseString(phreeqc.dat)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
phrRunFile("ex2")
phrRunFile(ex2)
phrRunFile("ex2")
writeLines(ex2, "ex2")
phrRunFile("ex2")
phrGetSelectedOutput()
phrSetOutputStringsOn(TRUE)
phrRunString(ex1)
phrGetOutputStrings()
parse(ex2)
parse("ex2")
eval(parse("ex2"))
ex2
cat(ex2)
shiny::runApp()
shiny::runApp()
shiny::runApp()
input <- vector()
input <- c(input, "SOULUTION 1")
input <- c(input, " temp 25.0")
input <- c(input, " pH 7.0")
phrSetOutputFileOn(TRUE)
phrRunString(input)
cat(paste("see", phrGetOutputFileName()"."))
cat(paste("see", phrGetOutputFileName(),"."))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
phrSetOutputFileOn(FALSE)
phrRunFile(ex2)
writeLines(ex2, "ex2")
phrRunFile(ex2)
phrSetOutputStringsOn(FALSE)
input <- c('SOULTION 1 Pure water ',
'EQUILIBRIUM_PHASES 1 ',
' Calcite 0 10 ')
phrRunString(input)
phrGetOutputsStrings()
phrGetOutputStrings()
phrRunString(input)
phrSetOutputStringsOn(TRUE)
phrRunString(input)
cat(phrGetOutputStrings(), sep = "\n")
input <- c(
'SOLUTION 1 Pure water ',
'EQUILIBRIUM_PHASES 1  ',
'    Calcite 0 10      '
)
phrRunString(input)
cat(phrGetOutputStrings(), sep = "\n")
shiny::runApp()
shiny::runApp()
cat(phrGetOutputStrings(), sep = "\n")
cat(phrGetSelectedOutput(), sep = "\n")
phrRunString(ex2)
phrGetSelectedOuput()
phrGetSelectedOutput()
df <- phrGetSelectedOutput()
summary(df$n1)
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
runApp(system.file("examples/02-eval", package="shinyAce"))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
phrLoadDatabaseString(phreeqc.dat)
phrSetOutputStringsOn(TRUE)
phrRunString(ex2)
phrGetOutputStrings()
so <- phrGetSelectedOutput()
so
attach(so$n1)
title  <- "Gypsum-Anhydrite Stability"
xlabel <- "Temperature, in degrees celcius"
ylabel <- "Saturation index"
plot(temp.C., si_gypsum, main = title, xlab = xlabel, ylab = ylabel,
col = "darkred", xlim = c(25, 75), ylim = c(-0.4, 0.0))
points(temp.C., si_anhydrite, col = "darkgreen")
legend("bottomright", c("Gypsum", "Anhydrite"),
col = c("darkred", "darkgreen"), pch = c(1, 1))
shiny::runApp()
shiny::runApp()
shiny::runApp()
phrLoadDatabaseString("phreeqc.dat")
phrLoadDatabaseString(phreeqc.dat)
eval("phreeqc.data")
eval("phreeqc.dat")
parse("phreeqc.dat")
cat("phreeqc.dat")
shiny::runApp()
phrLoadDatabaseString(cat("phreeqc.dat"))
as.name("phreeqc.dat")
phrLoadDatabaseString(as.name("phreeqc.dat"))
phrLoadDatabaseString(quote("phreeqc.dat"))
phrLoadDatabaseString(as.symbol("phreeqc.dat"))
eval("phreeqc.dat")
phrLoadDatabaseString(eval("phreeqc.dat"))
call(phrLoadDatabaseString, "phreeqc.dat")
do.call(phrLoadDatabaseString, "phreeqc.dat")
do.call(phrLoadDatabaseString, phreeqc.dat)
call(phrLoadDatabaseString, phreeqc.dat)
call("phreeqc.dat", phrLoadDatabaseString)
as.character("phreeqc.dat")
readline("phreeqc.dat")
readline("phreeqc.dat")
deparse("phreeqd.dat")
shiny::runApp()
writeLines("phreeqc.dat", temp)
writeLines("phreeqc.dat", "temp")
temp
phreeqc.dat
temp <- tempfile()
writeLines("phreeqc.dat", temp)
temp
writeLines(phreeqc.dat, temp)
temp
phrLoadDatabase(temp)
unlink(temp)
shiny::runApp()
update.packages(ask=F)
